package kermit_learning;

import game_util.DefaultReferee;
import game_util.GameRules;
import reversi.Reversi;
import reversi.ReversiAIMiniMaxOptimized;

import java.util.ArrayList;

public class FinalWinner {

    public final static double[][] DEFAULT_SCORES = {
        {1.01, -.43, .38,  .07,  0,    .42,  -.2,  1.02},
        {-.27, -.74, -.16, -.14, -.13, -.25, -.65, -.39},
        {.56,  -.3,  .12,  .05,  -.04, .07,  -.15, .48},
        {.01,  -.08, .01,  -.01,  -.04, -.02, -.12, .03},
        {-.1,  -.08, .01,  -.01, -.03, .02,  -.04, -.2},
        {.59,  -.23, .06,  .01,  .04,  .06,  -.19, .35},
        {-.06, -.55, -.18, -.08, -.15, -.31, -.82, -.58},
        {.96,  -.42, .67,  -.02, -.03, .81,  -.51, 1.01}
    };

    /**
     * depth 5  2500+ generations
     */

    public final static double[][] DEPTH_5_VERSION_1 = {
        {1.010000 	,-0.270000 	,0.560000 	,0.010000 	,0.010000 	,0.560000 	,-0.270000 	,1.010000},
        {-0.270000 	,-0.740000 	,-0.300000 	,-0.080000 	,-0.080000 	,-0.300000 	,-0.740000 	,-0.270000},
        {0.560000 	,-0.300000 	,0.120000 	,0.010000 	,0.010000 	,0.120000 	,-0.300000 	,0.560000},
        {0.010000 	,-0.080000 	,0.010000 	,-0.010000 	,-0.010000 	,0.010000 	,-0.080000 	,0.010000},
        {0.010000 	,-0.080000 	,0.010000 	,-0.010000 	,-0.010000 	,0.010000 	,-0.080000 	,0.010000},
        {0.560000 	,-0.300000 	,0.120000 	,0.010000 	,0.010000 	,0.120000 	,-0.300000 	,0.560000},
        {-0.270000 	,-0.740000 	,-0.300000 	,-0.080000 	,-0.080000 	,-0.300000 	,-0.740000 	,-0.270000},
        {1.010000 	,-0.270000 	,0.560000 	,0.010000 	,0.010000 	,0.560000 	,-0.270000 	,1.010000},
    };

    public final static double[][] DEPTH_5_VERSION_2 = {
        {1.010000 	,-0.270000 	,0.560000 	,0.010000 	,0.010000 	,0.560000 	,-0.270000 	,1.010000},
        {-0.270000 	,-0.740000 	,-0.300000 	,-0.080000 	,-0.080000 	,-0.300000 	,-0.740000 	,-0.270000},
        {0.560000 	,-0.300000 	,0.120000 	,0.010000 	,0.010000 	,0.120000 	,-0.300000 	,0.560000},
        {0.010000 	,-0.080000 	,0.010000 	,-0.010000 	,-0.010000 	,0.010000 	,-0.080000 	,0.010000},
        {0.010000 	,-0.080000 	,0.010000 	,-0.010000 	,-0.010000 	,0.010000 	,-0.080000 	,0.010000},
        {0.560000 	,-0.300000 	,0.120000 	,0.010000 	,0.010000 	,0.120000 	,-0.300000 	,0.560000},
        {-0.270000 	,-0.740000 	,-0.300000 	,-0.080000 	,-0.080000 	,-0.300000 	,-0.740000 	,-0.270000},
        {1.010000 	,-0.270000 	,0.560000 	,0.010000 	,0.010000 	,0.560000 	,-0.270000 	,1.010000},
    };



    /**
     * depth 6  150+ generations
     */

    public final static double[][] DEPTH_6_VERSION_1 = {
        {1.010000 	,-0.430000 	,0.380000 	,0.070000 	,0.000000 	,0.420000 	,-0.200000 	,1.020000},
        {-0.270000 	,-0.740000 	,-0.160000 	,-0.140000 	,-0.130000 	,-0.250000 	,-0.650000 	,-0.390000},
        {0.560000 	,-0.300000 	,0.120000 	,0.050000 	,-0.040000 	,0.070000 	,-0.150000 	,0.480000},
        {0.010000 	,-0.080000 	,0.010000 	,-0.010000 	,-0.040000 	,-0.020000 	,-0.120000 	,0.030000},
        {-0.100000 	,-0.080000 	,0.010000 	,-0.010000 	,-0.030000 	,0.020000 	,-0.040000 	,-0.200000},
        {0.590000 	,-0.230000 	,0.060000 	,0.010000 	,0.040000 	,0.060000 	,-0.190000 	,0.350000},
        {-0.060000 	,-0.550000 	,-0.180000 	,-0.080000 	,-0.150000 	,-0.310000 	,-0.820000 	,-0.580000},
        {0.960000 	,-0.420000 	,0.670000 	,-0.020000 	,-0.030000 	,0.810000 	,-0.510000 	,1.010000},
    };

    public final static double[][] DEPTH_6_VERSION_2 = {
        {0.806786 	,-0.270000 	,0.560000 	,0.010000 	,0.010000 	,0.560000 	,-0.270000 	,0.806786},
        {-0.270000 	,-0.740000 	,-0.300000 	,-0.197308 	,-0.197308 	,-0.300000 	,-0.740000 	,-0.270000},
        {0.560000 	,-0.300000 	,0.120000 	,-0.038608 	,-0.038608 	,0.120000 	,-0.300000 	,0.560000},
        {0.010000 	,-0.197308 	,-0.038608 	,0.190351 	,0.190351 	,-0.038608 	,-0.197308 	,0.010000},
        {0.010000 	,-0.197308 	,-0.038608 	,0.190351 	,0.190351 	,-0.038608 	,-0.197308 	,0.010000},
        {0.560000 	,-0.300000 	,0.120000 	,-0.038608 	,-0.038608 	,0.120000 	,-0.300000 	,0.560000},
        {-0.270000 	,-0.740000 	,-0.300000 	,-0.197308 	,-0.197308 	,-0.300000 	,-0.740000 	,-0.270000},
        {0.806786 	,-0.270000 	,0.560000 	,0.010000 	,0.010000 	,0.560000 	,-0.270000 	,0.806786},
    };

    public final static double[][] DEPTH_6_VERSION_3 = {
        {0.806786 	,-0.270000 	,0.322625 	,0.010000 	,0.010000 	,0.322625 	,-0.270000 	,0.806786},
        {-0.270000 	,-0.740000 	,-0.300000 	,-0.323814 	,-0.323814 	,-0.300000 	,-0.740000 	,-0.270000},
        {0.322625 	,-0.300000 	,0.120000 	,-0.038608 	,-0.038608 	,0.120000 	,-0.300000 	,0.322625},
        {0.010000 	,-0.323814 	,-0.038608 	,0.118876 	,0.118876 	,-0.038608 	,-0.323814 	,0.010000},
        {0.010000 	,-0.323814 	,-0.038608 	,0.118876 	,0.118876 	,-0.038608 	,-0.323814 	,0.010000},
        {0.322625 	,-0.300000 	,0.120000 	,-0.038608 	,-0.038608 	,0.120000 	,-0.300000 	,0.322625},
        {-0.270000 	,-0.740000 	,-0.300000 	,-0.323814 	,-0.323814 	,-0.300000 	,-0.740000 	,-0.270000},
        {0.806786 	,-0.270000 	,0.322625 	,0.010000 	,0.010000 	,0.322625 	,-0.270000 	,0.806786},
    };

    public final static double[][] DEPTH_6_VERSION_4 = {
        {1.092621 	,-0.270000 	,0.560000 	,0.010000 	,0.010000 	,0.560000 	,-0.270000 	,1.092621},
        {-0.270000 	,-0.515085 	,-0.344208 	,-0.080000 	,-0.080000 	,-0.344208 	,-0.515085 	,-0.270000},
        {0.560000 	,-0.344208 	,0.120000 	,0.033876 	,0.033876 	,0.120000 	,-0.344208 	,0.560000},
        {0.010000 	,-0.080000 	,0.033876 	,-0.010000 	,-0.010000 	,0.033876 	,-0.080000 	,0.010000},
        {0.010000 	,-0.080000 	,0.033876 	,-0.010000 	,-0.010000 	,0.033876 	,-0.080000 	,0.010000},
        {0.560000 	,-0.344208 	,0.120000 	,0.033876 	,0.033876 	,0.120000 	,-0.344208 	,0.560000},
        {-0.270000 	,-0.515085 	,-0.344208 	,-0.080000 	,-0.080000 	,-0.344208 	,-0.515085 	,-0.270000},
        {1.092621 	,-0.270000 	,0.560000 	,0.010000 	,0.010000 	,0.560000 	,-0.270000 	,1.092621},
    };


    /**
     * depth 7  150+ generations
     */
    public final static double[][] DEPTH_7_VERSION_1 = {
        {1.010000 	,-0.430000 	,0.380000 	,0.070000 	,0.000000 	,0.420000 	,-0.200000 	,1.020000},
        {-0.270000 	,-0.740000 	,-0.160000 	,-0.140000 	,-0.130000 	,-0.250000 	,-0.650000 	,-0.390000},
        {0.560000 	,-0.300000 	,0.120000 	,0.050000 	,-0.040000 	,0.070000 	,-0.150000 	,0.480000},
        {0.010000 	,-0.080000 	,0.010000 	,-0.010000 	,-0.040000 	,-0.020000 	,-0.120000 	,0.030000},
        {-0.100000 	,-0.080000 	,0.010000 	,-0.010000 	,-0.030000 	,0.020000 	,-0.040000 	,-0.200000},
        {0.590000 	,-0.230000 	,0.060000 	,0.010000 	,0.040000 	,0.060000 	,-0.190000 	,0.350000},
        {-0.060000 	,-0.550000 	,-0.180000 	,-0.080000 	,-0.150000 	,-0.310000 	,-0.820000 	,-0.580000},
        {0.960000 	,-0.420000 	,0.670000 	,-0.020000 	,-0.030000 	,0.810000 	,-0.510000 	,1.010000},
    };

    public final static double[][] DEPTH_7_VERSION_2 = {
        {1.010000 	,-0.270000 	,0.560000 	,-0.241174 	,-0.241174 	,0.560000 	,-0.270000 	,1.010000},
        {-0.270000 	,-0.940970 	,-0.300000 	,-0.080000 	,-0.080000 	,-0.300000 	,-0.940970 	,-0.270000},
        {0.560000 	,-0.300000 	,0.120000 	,0.010000 	,0.010000 	,0.120000 	,-0.300000 	,0.560000},
        {-0.241174 	,-0.080000 	,0.010000 	,-0.100569 	,-0.100569 	,0.010000 	,-0.080000 	,-0.241174},
        {-0.241174 	,-0.080000 	,0.010000 	,-0.100569 	,-0.100569 	,0.010000 	,-0.080000 	,-0.241174},
        {0.560000 	,-0.300000 	,0.120000 	,0.010000 	,0.010000 	,0.120000 	,-0.300000 	,0.560000},
        {-0.270000 	,-0.940970 	,-0.300000 	,-0.080000 	,-0.080000 	,-0.300000 	,-0.940970 	,-0.270000},
        {1.010000 	,-0.270000 	,0.560000 	,-0.241174 	,-0.241174 	,0.560000 	,-0.270000 	,1.010000},
    };

    public final static double[][] DEPTH_7_VERSION_3 = {
        {1.010000 	,-0.270000 	,0.560000 	,-0.253853 	,-0.253853 	,0.560000 	,-0.270000 	,1.010000},
        {-0.270000 	,-0.740000 	,-0.384101 	,-0.080000 	,-0.080000 	,-0.384101 	,-0.740000 	,-0.270000},
        {0.560000 	,-0.384101 	,-0.239954 	,-0.155662 	,-0.155662 	,-0.239954 	,-0.384101 	,0.560000},
        {-0.253853 	,-0.080000 	,-0.155662 	,-0.010000 	,-0.010000 	,-0.155662 	,-0.080000 	,-0.253853},
        {-0.253853 	,-0.080000 	,-0.155662 	,-0.010000 	,-0.010000 	,-0.155662 	,-0.080000 	,-0.253853},
        {0.560000 	,-0.384101 	,-0.239954 	,-0.155662 	,-0.155662 	,-0.239954 	,-0.384101 	,0.560000},
        {-0.270000 	,-0.740000 	,-0.384101 	,-0.080000 	,-0.080000 	,-0.384101 	,-0.740000 	,-0.270000},
        {1.010000 	,-0.270000 	,0.560000 	,-0.253853 	,-0.253853 	,0.560000 	,-0.270000 	,1.010000},
    };

    public final static double[][] DEPTH_7_VERSION_4 = {
        {1.010000 	,-0.415963 	,0.920544 	,-0.253853 	,-0.253853 	,0.920544 	,-0.415963 	,1.010000},
        {-0.415963 	,-0.740000 	,-0.384101 	,-0.260463 	,-0.260463 	,-0.384101 	,-0.740000 	,-0.415963},
        {0.920544 	,-0.384101 	,-0.239954 	,-0.155662 	,-0.155662 	,-0.239954 	,-0.384101 	,0.920544},
        {-0.253853 	,-0.260463 	,-0.155662 	,0.121869 	,0.121869 	,-0.155662 	,-0.260463 	,-0.253853},
        {-0.253853 	,-0.260463 	,-0.155662 	,0.121869 	,0.121869 	,-0.155662 	,-0.260463 	,-0.253853},
        {0.920544 	,-0.384101 	,-0.239954 	,-0.155662 	,-0.155662 	,-0.239954 	,-0.384101 	,0.920544},
        {-0.415963 	,-0.740000 	,-0.384101 	,-0.260463 	,-0.260463 	,-0.384101 	,-0.740000 	,-0.415963},
        {1.010000 	,-0.415963 	,0.920544 	,-0.253853 	,-0.253853 	,0.920544 	,-0.415963 	,1.010000},
    };

    public static void main(String[] args) { new FinalWinner(); }
    public FinalWinner() {
        ArrayList<double[][]> finalScores = new ArrayList<double[][]>(){};
        finalScores.add(DEFAULT_SCORES);
        finalScores.add(DEPTH_5_VERSION_1); finalScores.add(DEPTH_5_VERSION_2);
        finalScores.add(DEPTH_6_VERSION_1); finalScores.add(DEPTH_6_VERSION_2); finalScores.add(DEPTH_6_VERSION_3); finalScores.add(DEPTH_6_VERSION_4);
        finalScores.add(DEPTH_7_VERSION_1); finalScores.add(DEPTH_7_VERSION_2); finalScores.add(DEPTH_7_VERSION_3); finalScores.add(DEPTH_7_VERSION_4);

        int[] wins = new int[finalScores.size()];
        for (int i=0; i<finalScores.size(); i++) {
            int finalI = i;
            for (int j=0; j<finalScores.size(); j++) {
                if (i == j)
                    continue;

                Reversi reversi = new Reversi(finalScores.get(i), finalScores.get(j));
                reversi.initialize(new DefaultReferee(reversi), new ReversiAIMiniMaxOptimized(reversi), new ReversiAIMiniMaxOptimized(reversi));
                reversi.onNextPlayer.register(() -> System.out.println(reversi));
                reversi.onGameEnded.register(() -> {
                    if (reversi.getGameSpecificState() == GameRules.GameState.PLAYER_1_WINS)
                        wins[finalI]++;
                });
                System.err.println("Starting Game "+i+" VS "+j);
                reversi.start(false);
            }
        }

        System.err.flush();
        for (int i=0; i<finalScores.size(); i++) {
            System.err.println("Score "+ i +" won "+wins[i]+" keer");
        }
    }
}